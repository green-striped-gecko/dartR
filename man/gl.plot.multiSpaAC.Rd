% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gl.spatial.ac.multiPlot.r
\name{gl.plot.multiSpaAC}
\alias{gl.plot.multiSpaAC}
\title{plot of mulitple Spatial autocorrelation analyses}
\usage{
gl.plot.multiSpaAC(
  l.spa,
  grp.var.name = "Pop",
  plot_theme = theme_classic(),
  outpath = tempdir(),
  out_file_rootname = "ac.multiPlot",
  verbose = NULL
)
}
\arguments{
\item{l.spa}{The list of multiple gl.spatial.autoCorr outputs}

\item{grp.var.name}{The name to be used for the grouping variable}

\item{plot_theme}{User specified theme [default theme_dartR()].}

\item{outpath}{The path where to save the output}

\item{out_file_rootname}{The name of the root of the output file}

\item{verbose}{Verbosity: 0, silent or fatal errors; 1, begin and end; 2,
progress log ; 3, progress and results summary; 5, full report
[default NULL, unless specified using gl.set.verbosity].}
}
\value{
Returns the ggplot object

Custodian: Carlo Pacioni -- Post to
  \url{https://groups.google.com/d/forum/dartr}
}
\description{
This function takes multiple  outputs of gl.spatial.autoCorr 
and plots them to enable their graphical comparisons. If upper and lower estimates
are present in the outputs, these are plotted as error bars around the r estimates.
}
\details{
The input is a list. If the list has names, these are used 
in the legend. If names are absent, these are internally created assuming that each 
element of the list represents different populations.
}
\examples{
 # Select one pop only
plat_Tent <- gl.keep.ind(platypus.gl, 
ind.list = platypus.gl@ind.names[pop(platypus.gl) == "TENTERFIELD"], 
mono.rm = TRUE)
# Compute a simple distance matrix and reverse it so that correlated values 
# indicated more similar individuals as we are used to see plots in GenAleEx
gd <- 1 - as.matrix(gl.dist.ind(plat_Tent, method = "Simple", plot.out = FALSE))
# Replace the diagonal with zeros
diag(gd) <- 0
# Compute the (approx) geographical distance matrix
ggd <- as.matrix(dist(plat_Tent@other$latlon))

# Spatial autocorrelation
spa <- gl.spatial.autoCorr(gd, ggd, bins = 3, reps = 100, 
permutation = TRUE, bootstrap = TRUE)

 # Does the same for the second pop
plat_Sev <- gl.keep.ind(platypus.gl, 
ind.list = platypus.gl@ind.names[pop(platypus.gl) == "SEVERN_ABOVE"], 
mono.rm = TRUE)
# Compute a simple distance matrix and reverse it so that correlated values 
# indicated more similar individuals as we are used to see plots in GenAleEx
gd_Sev <- 1 - as.matrix(gl.dist.ind(plat_Sev, method = "Simple", plot.out = FALSE))
# Replace the diagonal with zeros
diag(gd_Sev) <- 0
# Compute the (approx) geographical distance matrix
ggd_Sev <- as.matrix(dist(plat_Sev@other$latlon))

# Spatial autocorrelation
spa_Sev <- gl.spatial.autoCorr(gd, ggd, bins = 3, reps = 100, 
permutation = TRUE, bootstrap = TRUE)

# Plot them together 
gl.plot.multiSpaAC(list(TENTERFIELD=spa, SEVERN_ABOVE=spa_Sev))

}
